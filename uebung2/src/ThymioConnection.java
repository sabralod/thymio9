import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

/**
 * <h1>Thymio Connection Class: transfers commands to Raspberry </h1>
 *
 * Automatically generated by Class Thymio
 * <b>Do not change anything here!</b>
 *
 *
 * @version 1.0
 * @author Aigner Johannes: johannes.aigner@stud.uni-regensburg.de
 *
 */
public class ThymioConnection {

    /**
     * Thymio PORT: Do not change!
     */
    public static final int PORT = 6789;

    private Socket conn;
    private PrintWriter printWriter;
    private BufferedReader bufferedReader;

    /**
     * Tries to connect to your Raspberry Pi
     *
     * @param ip: Raspberry PI IP
     * @throws NullPointerException if ip is null.
     */
    public ThymioConnection(String ip) {
        try {
            connect(ip);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void write(String message) throws IOException {
        printWriter.println(message);
        printWriter.flush();
    }

    private String read() throws IOException {
        String message;
        message = bufferedReader.readLine();

        return message;
    }

    private void connect(String host) throws IOException {
        conn = new Socket(host, ThymioConnection.PORT);

        printWriter = new PrintWriter(new OutputStreamWriter(
                conn.getOutputStream()));

        bufferedReader = new BufferedReader(new InputStreamReader(
                conn.getInputStream()));
    }


    /**
     * This Method is used in Class Thymio
     * Sends variable and datalist to Thymio
     *
     * @param variable: Example "set speed"
     * @param data: Example: 500,500
     */
    public synchronized void setVariable(String variable, List<Short> data) {
        synchronized (this) {
            try {
                String msg = "set " + variable;

                for (int i = 0; i < data.size(); i++) {
                    msg += " ";
                    msg += data.get(i).toString();
                }

                write(msg);
                msg = read();
                if (!msg.startsWith("ok:"))
                    System.out.println(msg);
            } catch (IOException e) {
                System.out.println("error while setVariable: " + e);
                e.printStackTrace();
            }

            notify();
        }
    }

    /**
     * This Method is used in Class Thymio:
     * Sends the Message "setspeed" to Raspberry and so on...
     *
     * @param data: List with short data - 2 entries with shorts for Motor Left and Motor Right
     */

    public synchronized void setSpeed(List<Short> data) {
        synchronized (this) {
            try {
                String msg = "setspeed";

                for (int i = 0; i < data.size(); i++) {
                    msg += " ";
                    msg += data.get(i).toString();
                }

                write(msg);
                msg = read();
                if (!msg.startsWith("ok: "))
                    System.out.println(msg);
            } catch (IOException e) {
                System.out.println("error while setSpeed: " + e);
                e.printStackTrace();
            }

            notify();
        }
    }


    /**
     * This Method is used in Class Thymio:
     * Gets Sensor data e.g.
     *
     * @param variable: The variable you want to get. Example "prox.horizontal"
     * @return: ArrayList with Sensor Data
     */
    public synchronized List<Short> getVariable(String variable) {
        synchronized (this) {
            ArrayList<Short> res = new ArrayList<Short>();

            try {
                String msg;

                write("get " + variable);
                msg = read();
                if (msg.startsWith("ok: ")) {
                    String[] data = msg.substring(4).split(" ");

                    for (int i = 0; i < data.length; i++)
                        res.add(new Short(Short.parseShort(data[i])));
                } else {
                    System.out.println(msg);
                }
            } catch (IOException e) {
                System.out.println("error while getVariable: " + e);
                e.printStackTrace();
            }

            notify();
            return res;
        }
    }
}

